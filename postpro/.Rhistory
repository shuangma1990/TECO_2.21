# --------------------------------------------------------------
# dataframe for the bar on negative y axis
soilt2<-tsoil
component2<-rep('delta Labile C',6)
dtmean2<-df3$QC6_mean1-df3$QCt10_mean1+co2_6+ch4_6
dtstd2<-df4$QC6_sd1-df4$QCt10_sd1+co2_6_sd+ch4_6_sd
dtmin2 <- dtmean2-dtstd2
dtmax2 <- dtmean2+dtstd2
dt2 <- data.frame(soilt2,component2,dtmean2,dtmin2,dtmax2)
# --------------------------------------------------------------
# dataframe for the line chart for the total of all bars (net recalcitrant c change)
soilt3<-tsoil
dtmean3<-df3$QC6_mean1+co2_678+ch4_678-df3$QCt10_mean1
dtstd3<-df4$QC6_sd1+co2_678_sd+ch4_678_sd-df4$QCt10_sd1
dtmin3 <- dtmean3-dtstd3
dtmax3 <- dtmean3+dtstd3
component3<-rep('net recalcitrant C loss,6')
dt3<-data.frame(soilt3,component3,dtmean3,dtmin3,dtmax3)
# --------------------------------------------------------------
# # --------------------------------------------------------------
# # dataframe for stacked bars on positive y axis, litter in
# soilt <-rep(tsoil,2)
# component<-rep(c('CH4','CO2'),each=6)
# dtmean <- c(ch4_678,co2_678)
# dtstd <- c(ch4_678_sd,co2_678_sd)
# dtmin <- dtmean-dtstd
# dtmax <- dtmean+dtstd
# dt <- data.frame(soilt,component,dtmean,dtmin,dtmax)
# # stack the sd for dataframe dt
# dt$dtmin[dt$component == "CO2"] <- with(dt,dtmin[component == "CO2"] +
#                                           dtmin[component == "CH4"])
# dt$dtmax[dt$component == "CO2"] <- with(dt,dtmax[component == "CO2"] +
#                                           dtmax[component == "CH4"])
# plot
# dtstd <- c(ch4_678_sd,co2_678_sd)
# dtmin <- dtmean-dtstd
# dtmax <- dtmean+dtstd
# dt <- data.frame(soilt,component,dtmean,dtmin,dtmax)
# # stack the sd for dataframe dt
# dt$dtmin[dt$component == "CO2"] <- with(dt,dtmin[component == "CO2"] +
#                                           dtmin[component == "CH4"])
# dt$dtmax[dt$component == "CO2"] <- with(dt,dtmax[component == "CO2"] +
#                                           dtmax[component == "CH4"])
# plot
levels(as.factor(dt$component))
a<-factor(dt$component, levels=c("CO2","CH4"))
fname='_fcast2_200'
fname='_fcast2_r4'
setwd("~/RESEARCH/TECO_SPRUCE_site/TECO_2.21_Dissertation/jpl_server/TECO_2.21/postpro/")
df1 <- read.csv(paste("3_3_mon2yr_trend",fname,".csv",sep=''),header = T)
df2 <- read.csv(paste("3_3_mon2yr_trend_sd",fname,".csv",sep=''),header = T)
plt <- rep(c(1:6),each=3)
year<- rep(c(2016:2018),6)
df1 <- cbind(plt,year,df1[,-1])
df2 <- cbind(plt,year,df2[,-1])
df3 <- aggregate(df1,by=list(df1$plt),FUN=mean)
df4 <- aggregate(df2,by=list(df2$plt),FUN=mean)
co2_678<-df3$Rh6_mean1+df3$Rh7_mean1+df3$Rh8_mean1
ch4_678<-co2_678*(df3$simuCH4_mean1/df3$Rh_mean1)
co2_678_sd<-df4$Rh6_sd1+df4$Rh7_sd1+df4$Rh8_sd1
ch4_678_sd<-co2_678_sd*(df4$simuCH4_sd1/df4$Rh_sd1)
co2_78<-df3$Rh7_mean1+df3$Rh8_mean1
ch4_78<-co2_78*(df3$simuCH4_mean1/df3$Rh_mean1)
co2_78_sd<-df4$Rh7_sd1+df4$Rh8_sd1
ch4_78_sd<-co2_78_sd*(df4$simuCH4_sd1/df4$Rh_sd1)
co2_6<-df3$Rh6_mean1
ch4_6<-co2_6*(df3$simuCH4_mean1/df3$Rh_mean1)
co2_6_sd<-df4$Rh6_sd1
ch4_6_sd<-co2_6_sd*(df4$simuCH4_sd1/df4$Rh_sd1)
par(mfrow=c(2,3),mar=c(2,2,2,2),oma=c(1, 0, 0, 1))
# --------------------------------------------------------------
barplot(df3$GPP_mean1)
barplot(df3$NPP_mean1+df3$Ra_mean1)
barplot(df3$Rh_mean1+df3$Ra_mean1+df3$QC1_mean1+df3$QC2_mean1+df3$QC3_mean1+df3$QC4_mean1+
df3$QC5_mean1+df3$QC6_mean1+df3$QC7_mean1+df3$QC8_mean1)
# --------------------------------------------------------------
#  whole system balance
barplot(df3$QC1_mean1+df3$QC2_mean1+df3$QC3_mean1+df3$QC4_mean1+
df3$QC5_mean1+df3$QC6_mean1+df3$QC7_mean1+df3$QC8_mean1)
l=df3$QC1_mean1+df3$QC2_mean1+df3$QC3_mean1+df3$QC4_mean1+
df3$QC5_mean1+df3$QC6_mean1+df3$QC7_mean1+df3$QC8_mean1
barplot(-df3$Rh_mean1+df3$NPP_mean1-df3$simuCH4_mean1)
r=-df3$Rh_mean1+df3$NPP_mean1-df3$simuCH4_mean1
r-l
# --------------------------------------------------------------
#   SOC balance
par(mfrow=c(2,3),mar=c(2,2,2,2),oma=c(1, 0, 0, 1))
barplot(-df3$QC7_mean1-df3$QC8_mean1+df3$QCt9_mean1)
l=-df3$QC7_mean1-df3$QC8_mean1+df3$QCt9_mean1
co2_678<-df3$Rh6_mean1+df3$Rh7_mean1+df3$Rh8_mean1
ch4_678<-co2_678*(df3$simuCH4_mean1/df3$Rh_mean1)
co2_678_sd<-df4$Rh6_sd1+df4$Rh7_sd1+df4$Rh8_sd1
ch4_678_sd<-co2_678_sd*(df4$simuCH4_sd1/df4$Rh_sd1)
barplot(-df3$QC6_mean1+co2_678+ch4_678-df3$QCt10_mean1)
r = df3$QC6_mean1+co2_678+ch4_678-df3$QCt10_mean1
r = df3$QC6_mean1+co2_678+ch4_678-df3$QCt10_mean1
r-l
barplot(df3$QC6_mean1-df3$QCt10_mean1)
# --------------------------------------------------------------
#  ch4 storage change
barplot(df3$conc1_mean1+df3$conc2_mean1+df3$conc3_mean1+df3$conc4_mean1+df3$conc5_mean1+
df3$conc6_mean1+df3$conc7_mean1+df3$conc8_mean1+df3$conc9_mean1+df3$conc10_mean1)
methane<-df3$conc1_mean1+df3$conc2_mean1+df3$conc3_mean1+df3$conc4_mean1+df3$conc5_mean1+
df3$conc6_mean1+df3$conc7_mean1+df3$conc8_mean1+df3$conc9_mean1+df3$conc10_mean1
methane
library(RColorBrewer)
# display.brewer.all(colorblindFriendly = TRUE)
# display.brewer.pal(n = 12, name = 'Paired')
colv2 <- brewer.pal(n = 12, name = 'Paired')
colv <- brewer.pal(n = 8, name = "Set2")
# --------------------------------------------------------------
#  plot SOC balance stacked barplot
df_rc <- t(cbind(co2_678,ch4_678))
df_rc_sd<-t(cbind(co2_678_sd,ch4_678_sd))
# rownames(df_rc) <- c('delta Labile C','CO2','CH4')
rownames(df_rc) <- c('CO2','CH4')
colnames(df_rc) <- c(1:6)
barplot(-df3$QC7_mean1-df3$QC8_mean1+df3$QCt9_mean1,ylim=c(0,900))
par(mfrow=c(1,1),mar=c(7,5,2,2),oma=c(1, 0, 0, 1))
barplot(df_rc,yaxs='i',las=1,yaxt="n",
ylim=c(-200,900),
main = NA,
col = colv[6:7])
barplot(df3$QC6_mean1-df3$QCt10_mean1,
yaxt="n",yaxs='i',
col=colv2[12],add=T)
axis(side=2,at = c(-200,0,200,400,600,800), labels=T, tck=0.03, cex.axis=0.85, mgp=c(3,0.3,0),las=1)
# axis(side=1,at = c(1:6))
mtext("Warming gradient",side = 1,line = 5)
box()
xsoil_av
tsoil <- c(5.59,4.44,6.44,7.65,9.02,10.04)
tsoil <- round(xsoil_av,2)
# --------------------------------------------------------------
# --------------------------------------------------------------
# --------------------------------------------------------------
df_rc <- t(cbind(df3$QC6_mean1,df3$Rh6_mean1,df3$Rh7_mean1+df3$Rh8_mean1,df3$simuCH4_mean1))
rownames(df_rc) <- c('delta Labile C','Rh lab','Rh rec','CH4')
colnames(df_rc) <- c(1:6)
# --------------------------------------------------------------
pdf(paste("5_1_c_balance",fname,".pdf",sep=''),width=10.5, height=4.75, compress=FALSE)
par(mfrow=c(1,2),mar=c(3,4,2,2),oma=c(1, 0, 0, 1))
# yaxs='i' let yaxis show at
barplot(df_rc,xaxt="n",yaxt="n",xlim = c(0,30),xaxs='i',ylim=c(0,500),yaxs='i',
main = NA,
xlab = "Warming gradient",
col = colv[5:8],
beside = TRUE
)
axis(1, at=c(3,8,13,18,23,28),pos=0,mgp=c(3,0.5,0),tck=0.03,
labels=c(1:6))
axis(side=2, labels=T, tck=0.03, cex.axis=0.85, mgp=c(3,0.3,0))
mtext('C loss (gC/m2/yr)',side = 2,line = 2)
box()
text='delta Labile C'
legend("topleft",inset=c(0.03,0.01),cex=0.8,y.intersp=0.8,
rownames(df_rc),text.width = strwidth(text)[1]/1,
fill = colv[5:8])
# --------------------------------------------------------------
barplot(-df3$QC7_mean1-df3$QC8_mean1,col=colv2[12],yaxt="n",xaxs='i',yaxs='i',
names=row.names(df3),ylim = c(0,800))
axis(side=2, labels=T, tck=0.03, cex.axis=0.85, mgp=c(3,0.3,0))
mtext('Recalcitrant C loss (gC/m2/yr)',side = 2,line = 2)
box()
text='delta Recalcitrant C'
legend("topleft",inset=c(0.03,0.01),cex=0.8,y.intersp=0.8,
'delta Recalcitrant C',text.width = strwidth(text)[1]/1,
fill = colv2[12])
dev.off()
# --------------------------------------------------------------
library(ggplot2)
library(viridis)
# library(hrbrthemes)
# install.packages("hrbrthemes")
# --------------------------------------------------------------
# create a dataset
xsoil_av
tsoil <- c(5.59,4.44,6.44,7.65,9.02,10.04)
tsoil <- round(xsoil_av,1)
# --------------------------------------------------------------
# dataframe for stacked bars on positive y axis
soilt <-rep(tsoil,2)
component<-rep(c('CH4','CO2'),each=6)
dtmean <- c(ch4_78,co2_78)
dtstd <- c(ch4_78_sd,co2_78_sd)
dtmin <- dtmean-dtstd
dtmax <- dtmean+dtstd
dt <- data.frame(soilt,component,dtmean,dtmin,dtmax)
# stack the sd for dataframe dt
dt$dtmin[dt$component == "CO2"] <- with(dt,dtmin[component == "CO2"] +
dtmin[component == "CH4"])
dt$dtmax[dt$component == "CO2"] <- with(dt,dtmax[component == "CO2"] +
dtmax[component == "CH4"])
# --------------------------------------------------------------
# dataframe for the bar on negative y axis
soilt2<-tsoil
component2<-rep('delta Labile C',6)
dtmean2<-df3$QC6_mean1-df3$QCt10_mean1+co2_6+ch4_6
dtstd2<-df4$QC6_sd1-df4$QCt10_sd1+co2_6_sd+ch4_6_sd
dtmin2 <- dtmean2-dtstd2
dtmax2 <- dtmean2+dtstd2
dt2 <- data.frame(soilt2,component2,dtmean2,dtmin2,dtmax2)
# --------------------------------------------------------------
# dataframe for the line chart for the total of all bars (net recalcitrant c change)
soilt3<-tsoil
dtmean3<-df3$QC6_mean1+co2_678+ch4_678-df3$QCt10_mean1
dtstd3<-df4$QC6_sd1+co2_678_sd+ch4_678_sd-df4$QCt10_sd1
dtmin3 <- dtmean3-dtstd3
dtmax3 <- dtmean3+dtstd3
component3<-rep('net recalcitrant C loss,6')
dt3<-data.frame(soilt3,component3,dtmean3,dtmin3,dtmax3)
# --------------------------------------------------------------
# # --------------------------------------------------------------
# # dataframe for stacked bars on positive y axis, litter in
# soilt <-rep(tsoil,2)
# component<-rep(c('CH4','CO2'),each=6)
# dtmean <- c(ch4_678,co2_678)
# dtstd <- c(ch4_678_sd,co2_678_sd)
# dtmin <- dtmean-dtstd
# dtmax <- dtmean+dtstd
# dt <- data.frame(soilt,component,dtmean,dtmin,dtmax)
# # stack the sd for dataframe dt
# dt$dtmin[dt$component == "CO2"] <- with(dt,dtmin[component == "CO2"] +
#                                           dtmin[component == "CH4"])
# dt$dtmax[dt$component == "CO2"] <- with(dt,dtmax[component == "CO2"] +
#                                           dtmax[component == "CH4"])
# plot
levels(as.factor(dt$component))
a<-factor(dt$component, levels=c("CO2","CH4"))
# scale_fill_viridis(discrete = T) +
# --------------------------------------------------------------
setwd("~/RESEARCH/TECO_SPRUCE_site/TECO_2.21_Dissertation/jpl_server/TECO_2.21/postpro/")
pdf(paste("6_buildup2",fname,".pdf",sep=''),width=5., height=3., compress=FALSE)
barcolv <- c( "#35978f","#80cdc1","#bf812d")
barcolv <- c( "#4575b4","#74add1","#bf812d")
myplot=ggplot()+
geom_bar(data = dt,aes(fill=a, y=dtmean, x=soilt),position="stack", stat="identity") +
xlab("Mean Annual Soil Temperature (°C)")+
scale_y_continuous(limits=c(-200, 1000))+
scale_x_continuous(breaks=tsoil)+
geom_bar(data = dt2,aes(y=dtmean2, x=soilt2,fill=component2),position="stack", stat="identity") +
geom_errorbar(data=dt,aes(y=dtmean, x=soilt,ymin=dtmin, ymax=dtmax),position = "identity",width=0.2)+
geom_errorbar(data=dt2,aes(y=dtmean2, x=soilt2,ymin=dtmin2, ymax=dtmax2),position = "identity",width=0.2)+
geom_errorbar(data=dt3,aes(y=dtmean3,x=soilt3,ymin=dtmin3,ymax=dtmax3),position = "identity",width=0.1,size=1.2,color="brown")+
geom_line(data = dt3, aes(x = soilt3, y = dtmean3,color="Net recalcitrant C loss"), size=1.5)+
ylab(expression("Mean Annual Carbon flux (gC/m"^2*"/yr)"))+
theme_bw()+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
scale_fill_manual(name=NULL,values=barcolv,labels=c(expression('CH'[4]),expression('CO'[2]),expression(Delta*" Labile C")))+
scale_color_manual(name=NULL,values = "brown",labels=expression("Net recalcitrant C loss"))+
theme(legend.position=c(0.3,0.8),legend.direction = "horizontal")+
theme(axis.ticks.length=unit(-0.25, "cm"),
# adjust X-axis title
axis.title.x = element_text(size = 10),
# adjust X-axis labels; also adjust their position using margin (acts like a bounding box)
# using margin was needed because of the inwards placement of ticks
# http://stackoverflow.com/questions/26367296/how-do-i-make-my-axis-ticks-face-inwards-in-ggplot2
axis.text.x = element_text(size = 8, margin = unit(c(t = 4.5, r = 0, b = 0, l = 0), "mm")),
# adjust Y-axis title
axis.title.y = element_text(size = 10, face = "bold"),
# adjust Y-axis labels
axis.text.y = element_text(size = 8, margin = unit(c(t = 0, r = 4.5, b = 0, l = 0), "mm")))
print(myplot)
dev.off()
myplot=ggplot()+
geom_bar(data = dt,aes(fill=a, y=dtmean, x=soilt),position="stack", stat="identity") +
xlab("Mean Annual Soil Temperature (°C)")+
scale_y_continuous(limits=c(-200, 1000))+
scale_x_continuous(breaks=tsoil)+
geom_bar(data = dt2,aes(y=dtmean2, x=soilt2,fill=component2),position="stack", stat="identity") +
geom_errorbar(data=dt,aes(y=dtmean, x=soilt,ymin=dtmin, ymax=dtmax),position = "identity",width=0.2)+
geom_errorbar(data=dt2,aes(y=dtmean2, x=soilt2,ymin=dtmin2, ymax=dtmax2),position = "identity",width=0.2)+
geom_errorbar(data=dt3,aes(y=dtmean3,x=soilt3,ymin=dtmin3,ymax=dtmax3),position = "identity",width=0.1,size=1.2,color="brown")+
geom_line(data = dt3, aes(x = soilt3, y = dtmean3,color="Net recalcitrant C loss"), size=1.5)+
ylab(expression("Mean Annual Carbon flux (gC/m"^2*"/yr)"))+
theme_bw()+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
scale_fill_manual(name=NULL,values=barcolv,labels=c(expression('CH'[4]),expression('CO'[2]),expression(Delta*" Labile C")))+
scale_color_manual(name=NULL,values = "brown",labels=expression("Net recalcitrant C loss"))+
theme(legend.position=c(0.3,0.8),legend.direction = "horizontal")+
theme(axis.ticks.length=unit(-0.25, "cm"),
# adjust X-axis title
axis.title.x = element_text(size = 10),
# adjust X-axis labels; also adjust their position using margin (acts like a bounding box)
# using margin was needed because of the inwards placement of ticks
# http://stackoverflow.com/questions/26367296/how-do-i-make-my-axis-ticks-face-inwards-in-ggplot2
axis.text.x = element_text(size = 8, margin = unit(c(t = 4.5, r = 0, b = 0, l = 0), "mm")),
# adjust Y-axis title
axis.title.y = element_text(size = 10, face = "bold"),
# adjust Y-axis labels
axis.text.y = element_text(size = 8, margin = unit(c(t = 0, r = 4.5, b = 0, l = 0), "mm")))
print(myplot)
# --------------------------------------------------------------
library(ggplot2)
library(viridis)
# library(hrbrthemes)
# install.packages("hrbrthemes")
# --------------------------------------------------------------
# create a dataset
xsoil_av
tsoil <- round(c(5.59,4.44,6.44,7.65,9.02,10.04),1)
tsoil <- round(xsoil_av,1)
# --------------------------------------------------------------
# dataframe for stacked bars on positive y axis
soilt <-rep(tsoil,2)
component<-rep(c('CH4','CO2'),each=6)
dtmean <- c(ch4_678,co2_678)
dtmeanp<-dtmean
dtstd <- c(ch4_678_sd,co2_678_sd)
dtmin <- dtmean-dtstd
dtmax <- dtmean+dtstd
dt <- data.frame(soilt,component,dtmean,dtmin,dtmax,dtmeanp)
# stack the sd for dataframe dt
dt$dtmin[dt$component == "CO2"] <- with(dt,dtmin[component == "CO2"] +
dtmin[component == "CH4"])
dt$dtmax[dt$component == "CO2"] <- with(dt,dtmax[component == "CO2"] +
dtmax[component == "CH4"])
dt$dtmeanp[dt$component == "CO2"] <- with(dt,dtmean[component == "CO2"] +
dtmean[component == "CH4"])
# --------------------------------------------------------------
# dataframe for the bar on negative y axis
soilt2<-tsoil
component2<-rep('delta Labile C',6)
dtmean2<-df3$QC6_mean1-df3$QCt10_mean1
dtstd2<-df4$QC6_sd1-df4$QCt10_sd1
dtmin2 <- dtmean2-dtstd2
dtmax2 <- dtmean2+dtstd2
dt2 <- data.frame(soilt2,component2,dtmean2,dtmin2,dtmax2)
# --------------------------------------------------------------
# dataframe for the line chart for the total of all bars (net recalcitrant c change)
soilt3<-tsoil
dtmean3<-df3$QC6_mean1+co2_678+ch4_678-df3$QCt10_mean1
dtstd3<-df4$QC6_sd1+co2_678_sd+ch4_678_sd-df4$QCt10_sd1
dtmin3 <- dtmean3-dtstd3
dtmax3 <- dtmean3+dtstd3
component3<-rep('net recalcitrant C loss,6')
dt3<-data.frame(soilt3,component3,dtmean3,dtmin3,dtmax3)
# --------------------------------------------------------------
# # --------------------------------------------------------------
# # dataframe for stacked bars on positive y axis, litter in
# soilt <-rep(tsoil,2)
# component<-rep(c('CH4','CO2'),each=6)
# dtmean <- c(ch4_678,co2_678)
# dtstd <- c(ch4_678_sd,co2_678_sd)
# dtmin <- dtmean-dtstd
# dtmax <- dtmean+dtstd
# dt <- data.frame(soilt,component,dtmean,dtmin,dtmax)
# # stack the sd for dataframe dt
# dt$dtmin[dt$component == "CO2"] <- with(dt,dtmin[component == "CO2"] +
#                                           dtmin[component == "CH4"])
# dt$dtmax[dt$component == "CO2"] <- with(dt,dtmax[component == "CO2"] +
#                                           dtmax[component == "CH4"])
# plot
levels(as.factor(dt$component))
a<-factor(dt$component, levels=c("CO2","CH4"))
# scale_fill_viridis(discrete = T) +
# --------------------------------------------------------------
setwd("~/RESEARCH/TECO_SPRUCE_site/TECO_2.21_Dissertation/jpl_server/TECO_2.21/postpro/")
pdf(paste("6_buildup",fname,".pdf",sep=''),width=6, height=3., compress=FALSE)
barcolv <- c( "#35978f","#80cdc1","#bf812d")
barcolv <- c( "#4575b4","#74add1","#bf812d",alpha("#c00000", alpha = 0.8))
barcolv <- c( "#39568cff","#287d8eff","#29AF7FFF",alpha("#fde725ff", alpha = 0.8))
# blue yellow green green    DCE319FF
# barcolv <- alpha(barcolv, alpha = 0.6)
myplot=ggplot()+
geom_bar(data = dt,aes(fill=a, y=dtmean, x=soilt),position="stack", stat="identity") +
xlab("Mean Annual Soil Temperature (°C, -0.1m)")+
scale_y_continuous(limits=c(-200, 1000))+
scale_x_continuous(breaks=tsoil)+
geom_bar(data = dt2,aes(y=dtmean2, x=soilt2,fill=component2),position="stack", stat="identity") +
geom_errorbar(data=dt,aes(y=dtmean, x=soilt,ymin=dtmin, ymax=dtmax),position = "identity",width=0.2)+
geom_point(data=dt,aes(y=dtmeanp, x=soilt),color='black',fill="white",size = 1,shape=21,stroke=1)+
geom_errorbar(data=dt2,aes(y=dtmean2, x=soilt2,ymin=dtmin2, ymax=dtmax2),position = "identity",width=0.2)+
geom_point(data=dt2,aes(y=dtmean2, x=soilt2),color='black',fill="white",size = 1,shape=21,stroke=1)+
geom_errorbar(data=dt3,aes(y=dtmean3,x=soilt3,ymin=dtmin3,ymax=dtmax3),position = "identity",width=0.1,size=1.2,color=barcolv[4])+
geom_line(data = dt3, aes(x = soilt3, y = dtmean3,color="Net recalcitrant C loss"), size=1.5)+
ylab(expression("Mean Annual Carbon flux (gC/m"^2*"/yr)"))+
theme_bw()+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
scale_fill_manual(name=NULL,values=barcolv[1:3],labels=c(expression('CH'[4]),expression('CO'[2]),expression("C gain from labile C and litter")))+
scale_color_manual(name=NULL,values = barcolv[4],labels=expression("Net recalcitrant C loss"))+
theme(legend.position=c(0.35,0.8),legend.direction = "horizontal")+
theme(axis.ticks.length=unit(-0.25, "cm"),
# adjust X-axis title
axis.title.x = element_text(size = 10),
# adjust X-axis labels; also adjust their position using margin (acts like a bounding box)
# using margin was needed because of the inwards placement of ticks
# http://stackoverflow.com/questions/26367296/how-do-i-make-my-axis-ticks-face-inwards-in-ggplot2
axis.text.x = element_text(size = 10, margin = unit(c(t = 4.5, r = 0, b = 0, l = 0), "mm")),
# adjust Y-axis title
axis.title.y = element_text(size = 10, face = "bold"),
# adjust Y-axis labels
axis.text.y = element_text(size = 10, margin = unit(c(t = 0, r = 4.5, b = 0, l = 0), "mm")))
print(myplot)
dev.off()
# geom_point(shape = 1,size = 2,colour = "black")+
# blue yellow green green    DCE319FF
# barcolv <- alpha(barcolv, alpha = 0.6)
myplot=ggplot()+
geom_bar(data = dt,aes(fill=a, y=dtmean, x=soilt),position="stack", stat="identity") +
xlab("Mean Annual Soil Temperature (°C, -0.1m)")+
scale_y_continuous(limits=c(-200, 1000))+
scale_x_continuous(breaks=tsoil)+
geom_bar(data = dt2,aes(y=dtmean2, x=soilt2,fill=component2),position="stack", stat="identity") +
geom_errorbar(data=dt,aes(y=dtmean, x=soilt,ymin=dtmin, ymax=dtmax),position = "identity",width=0.2)+
geom_point(data=dt,aes(y=dtmeanp, x=soilt),color='black',fill="white",size = 1,shape=21,stroke=1)+
geom_errorbar(data=dt2,aes(y=dtmean2, x=soilt2,ymin=dtmin2, ymax=dtmax2),position = "identity",width=0.2)+
geom_point(data=dt2,aes(y=dtmean2, x=soilt2),color='black',fill="white",size = 1,shape=21,stroke=1)+
geom_errorbar(data=dt3,aes(y=dtmean3,x=soilt3,ymin=dtmin3,ymax=dtmax3),position = "identity",width=0.1,size=1.2,color=barcolv[4])+
geom_line(data = dt3, aes(x = soilt3, y = dtmean3,color="Net recalcitrant C loss"), size=1.5)+
ylab(expression("Mean Annual Carbon flux (gC/m"^2*"/yr)"))+
theme_bw()+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
scale_fill_manual(name=NULL,values=barcolv[1:3],labels=c(expression('CH'[4]),expression('CO'[2]),expression("C gain from labile C and litter")))+
scale_color_manual(name=NULL,values = barcolv[4],labels=expression("Net recalcitrant C loss"))+
theme(legend.position=c(0.35,0.8),legend.direction = "horizontal")+
theme(axis.ticks.length=unit(-0.25, "cm"),
# adjust X-axis title
axis.title.x = element_text(size = 10),
# adjust X-axis labels; also adjust their position using margin (acts like a bounding box)
# using margin was needed because of the inwards placement of ticks
# http://stackoverflow.com/questions/26367296/how-do-i-make-my-axis-ticks-face-inwards-in-ggplot2
axis.text.x = element_text(size = 10, margin = unit(c(t = 4.5, r = 0, b = 0, l = 0), "mm")),
# adjust Y-axis title
axis.title.y = element_text(size = 10, face = "bold"),
# adjust Y-axis labels
axis.text.y = element_text(size = 10, margin = unit(c(t = 0, r = 4.5, b = 0, l = 0), "mm")))
print(myplot)
dt3
x <- dt3$dtmean3
fit <- lm(y ~ x)   ## linear regression
slp <- round(fit[["coefficients"]][2],digits = 2)
# plot.new()
plot(x,y,xlim = range(x,y),ylim = range(x,y),
xlab = paste0(modelnames[m+29]," CH4 emission Tg/month",sep=''),
ylab = "GC Posterior CH4 emission Tg/month",cex=ptsize*1.2)
y <- dt3$soilt3
x <- dt3$dtmean3
x
y
fit <- lm(y ~ x)   ## linear regression
slp <- round(fit[["coefficients"]][2],digits = 2)
# plot.new()
plot(x,y,xlim = range(x,y),ylim = range(x,y),
xlab = paste0(modelnames[m+29]," CH4 emission Tg/month",sep=''),
ylab = "GC Posterior CH4 emission Tg/month",cex=ptsize*1.2)
# plot.new()
plot(x,y,xlim = range(x,y),ylim = range(x,y),
xlab = paste0(" CH4 emission Tg/month",sep=''),
ylab = "GC Posterior CH4 emission Tg/month",cex=ptsize*1.2)
# plot.new()
plot(x,y,xlim = range(x,y),ylim = range(x,y),
xlab = paste0(" CH4 emission Tg/month",sep=''),
ylab = "GC Posterior CH4 emission Tg/month",cex=1.2)
# plot.new()
plot(x,y,xlim = range(x,y),ylim = range(y),
xlab = paste0(" CH4 emission Tg/month",sep=''),
ylab = "GC Posterior CH4 emission Tg/month",cex=1.2)
#----------------------------------------------------------------------------
x <- dt3$soilt3
y <- dt3$dtmean3
fit <- lm(y ~ x)   ## linear regression
slp <- round(fit[["coefficients"]][2],digits = 2)
# #-----  OLS  ----------------------------------------------------------------
# x0 <- seq(min(x), max(x), length = 20)  ## prediction grid
# y0 <- predict.lm(fit, newdata = list(x = x0))  ## predicted values
# lines(x0, y0, col = 2)  ## add regression curve (colour: red)
#-----  TLS   ---------------------------------------------------------------
v <- prcomp(cbind(x,y))$rotation
beta <- v[2,1]/v[1,1]
inter <- mean(y) - beta*mean(x)
x00 <- seq(min(x), max(x), length = 20)
y00 <- beta*x00+inter
lines(x00,y00,col="blue",lwd=2)
slp2 <- round(beta,digits = 2)
# plot.new()
plot(x,y,xlim = range(x,y),ylim = range(y),
xlab = paste0(" CH4 emission Tg/month",sep=''),
ylab = "GC Posterior CH4 emission Tg/month",cex=1.2)
# plot.new()
plot(x,y,
xlab = paste0(" CH4 emission Tg/month",sep=''),
ylab = "GC Posterior CH4 emission Tg/month",cex=1.2)
#----------------------------------------------------------------------------
x <- dt3$soilt3
y <- dt3$dtmean3
fit <- lm(y ~ x)   ## linear regression
slp <- round(fit[["coefficients"]][2],digits = 2)
# #-----  OLS  ----------------------------------------------------------------
# x0 <- seq(min(x), max(x), length = 20)  ## prediction grid
# y0 <- predict.lm(fit, newdata = list(x = x0))  ## predicted values
# lines(x0, y0, col = 2)  ## add regression curve (colour: red)
#-----  TLS   ---------------------------------------------------------------
v <- prcomp(cbind(x,y))$rotation
beta <- v[2,1]/v[1,1]
inter <- mean(y) - beta*mean(x)
x00 <- seq(min(x), max(x), length = 20)
y00 <- beta*x00+inter
lines(x00,y00,col="blue",lwd=2)
slp2 <- round(beta,digits = 2)
x0 <- seq(min(x), max(x), length = 20)  ## prediction grid
y0 <- predict.lm(fit, newdata = list(x = x0))  ## predicted values
lines(x0, y0, col = 2)  ## add regression curve (colour: red)
summary(fit)
dt
dt[1:6,3]
ccc = dt[1:6,3]/df[7:12,3]
ccc
ccc = dt[1:6,3]/dt[7:12,3]
ccc
ccc = dt[1:6,3]/dt3$dtmean3
ccc
